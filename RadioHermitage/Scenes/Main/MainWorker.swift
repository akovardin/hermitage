//
//    MainWorker.swift
//    RadioHermitage
//
//    Created by Artem Kovardin on 14.03.2020.
//    Copyright (c) 2020 Artem Kovardin. All rights reserved.
//
//    This file was generated by the Clean Swift Xcode Templates so
//    you can apply clean architecture to your iOS and Mac projects,
//    see http://clean-swift.com
//

import UIKit
import AVFoundation
import MediaPlayer

protocol MainServiceLogic {
    func play() -> String
    func stop()
}

class MainService: MainServiceLogic {
    var isPlaying = false

    var player: AVPlayer = {
        let url = URL(string: "http://91.190.127.185:8000/live_test")
        let player = AVPlayer(url: url!)

        return player
    }()

    init() {
        setupRemoteTransportControls()
    }

    func setupRemoteTransportControls() {
        // Get the shared MPRemoteCommandCenter
        let commandCenter = MPRemoteCommandCenter.shared()

        // Add handler for Play Command
        commandCenter.playCommand.addTarget { [unowned self] event in
            if !self.isPlaying {
                self.play()
                return .success
            }
            return .commandFailed
        }

        // Add handler for Pause Command
        commandCenter.pauseCommand.addTarget { [unowned self] event in
            if self.isPlaying  {
                self.stop()
                return .success
            }
            return .commandFailed
        }
    }

    func setupNowPlaying(image: String) {
        // Define Now Playing Info
        var info = [String : Any]()
        info[MPMediaItemPropertyTitle] = "Радио Эрмитаж 90,1 FM"

        if let image = UIImage(named: image) {
            info[MPMediaItemPropertyArtwork] =
                    MPMediaItemArtwork(boundsSize: image.size) { size in
                        return image
                    }
        }

        // Set the metadata
        MPNowPlayingInfoCenter.default().nowPlayingInfo = info
    }

    func play() -> String {
        isPlaying = true
        player.play()

        let image = "radio\(Int.random(in: 1..<6))"
        setupNowPlaying(image: image)

        return image
    }

    func stop() {
        isPlaying = false
        player.pause()
    }
}
